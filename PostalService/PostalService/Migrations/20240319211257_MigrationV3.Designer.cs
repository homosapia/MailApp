// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PostalService.DataBase;

#nullable disable

namespace PostalService.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20240319211257_MigrationV3")]
    partial class MigrationV3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PostalService.Domain.UniqueId", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("Validity")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("UniqueId");
                });

            modelBuilder.Entity("PostalService.Models.Writing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("MailIdId")
                        .HasColumnType("bigint");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tityle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("СompanyMemberId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MailIdId");

                    b.HasIndex("СompanyMemberId");

                    b.ToTable("Writings");
                });

            modelBuilder.Entity("PostalService.Models.СompanyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IncomingIMAP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("PostalService.Models.Writing", b =>
                {
                    b.HasOne("PostalService.Domain.UniqueId", "MailId")
                        .WithMany()
                        .HasForeignKey("MailIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PostalService.Models.СompanyMember", null)
                        .WithMany("ListWriting")
                        .HasForeignKey("СompanyMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MailId");
                });

            modelBuilder.Entity("PostalService.Models.СompanyMember", b =>
                {
                    b.Navigation("ListWriting");
                });
#pragma warning restore 612, 618
        }
    }
}
